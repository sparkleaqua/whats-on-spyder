#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun May 24 23:31:49 2020

@author: Mana
"""

def riverSizes(matrix):
    sizes =[]
    visited = [[False for value in row]for row in matrix]
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            if visited[i][j]:
                continue
            traverseNode(i,j,matrix, visited, sizes)
        return sizes
    
def traverseNode(i,j, matrix, visited, sizes):
    currentRiverSize = 0
    nodesToExplore = [[i,j]]
    while len(nodesToExplore):
        currentNode = nodesToExplore.pop()
        i = currentNode[0]
        j = currentNode[1]
        if visited[i][j]:
            continue
        visited[i][j] = True
        if matrix[i][j]==0:
            continue
        currentRiverSize+=1
        unvisitedNeighbors = getUnvisitedNeighbors(i,j,matrix,visited)
        for neighbor in unvisitedNeighbors:
            nodesToExplore.append(neighbor)
        if currentRiverSize>0:
            sizes.append(currentRiverSize)

def getUnvisitedNeighbors(i,j,matrix,visited):
    unvisitedNeighbors = []
    if i>0 and not visited [i-1, j]:
        unvisitedNeighbors.append([i-1,j])
    if i<len(matrix)-1 and not visited[i+1][j]:
        unvisitedNeighbors.append([i+1,j]
    if j>0 and not visited[i][j-1]):
            
